{"ast":null,"code":"/*!\n * jquery.counterup.js 2.1.0\n *\n * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal\n * Released under the GPL v2 License\n *\n * Amended by Jeremy Paris, Ciro Mattia Gonano and others\n *\n * Date: Feb 24, 2017\n */\n$(document).ready(function ($) {\n  $.fn.counterUp = function (options) {\n    var settings = $.extend({\n      time: 400,\n      delay: 10,\n      offset: 100,\n      beginAt: 0,\n      formatter: false,\n      context: \"window\",\n      callback: function () {}\n    }, options),\n        s;\n    return this.each(function () {\n      var $this = $(this),\n          counter = {\n        time: $(this).data(\"counterup-time\") || settings.time,\n        delay: $(this).data(\"counterup-delay\") || settings.delay,\n        offset: $(this).data(\"counterup-offset\") || settings.offset,\n        beginAt: $(this).data(\"counterup-beginat\") || settings.beginAt,\n        context: $(this).data(\"counterup-context\") || settings.context\n      };\n\n      var counterUpper = function () {\n        var nums = [];\n        var divisions = counter.time / counter.delay;\n        var num = $(this).attr(\"data-num\") ? $(this).attr(\"data-num\") : $this.text();\n        var isComma = /[0-9]+,[0-9]+/.test(num);\n        num = num.replace(/,/g, \"\");\n        var decimalPlaces = (num.split(\".\")[1] || []).length;\n        if (counter.beginAt > num) counter.beginAt = num;\n        var isTime = /[0-9]+:[0-9]+:[0-9]+/.test(num);\n\n        if (isTime) {\n          var times = num.split(\":\"),\n              m = 1;\n          s = 0;\n\n          while (times.length > 0) {\n            s += m * parseInt(times.pop(), 10);\n            m *= 60;\n          }\n        }\n\n        for (var i = divisions; i >= counter.beginAt / num * divisions; i--) {\n          var newNum = parseFloat(num / divisions * i).toFixed(decimalPlaces);\n\n          if (isTime) {\n            newNum = parseInt(s / divisions * i);\n            var hours = parseInt(newNum / 3600) % 24;\n            var minutes = parseInt(newNum / 60) % 60;\n            var seconds = parseInt(newNum % 60, 10);\n            newNum = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n          }\n\n          if (isComma) {\n            while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\n              newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, \"$1\" + \",\" + \"$2\");\n            }\n          }\n\n          if (settings.formatter) {\n            newNum = settings.formatter.call(this, newNum);\n          }\n\n          nums.unshift(newNum);\n        }\n\n        $this.data(\"counterup-nums\", nums);\n        $this.text(counter.beginAt);\n\n        var f = function () {\n          if (!$this.data(\"counterup-nums\")) {\n            settings.callback.call(this);\n            return;\n          }\n\n          $this.html($this.data(\"counterup-nums\").shift());\n\n          if ($this.data(\"counterup-nums\").length) {\n            setTimeout($this.data(\"counterup-func\"), counter.delay);\n          } else {\n            $this.data(\"counterup-nums\", null);\n            $this.data(\"counterup-func\", null);\n            settings.callback.call(this);\n          }\n        };\n\n        $this.data(\"counterup-func\", f);\n        setTimeout($this.data(\"counterup-func\"), counter.delay);\n      };\n\n      $this.waypoint(function (direction) {\n        counterUpper();\n        this.destroy();\n      }, {\n        offset: counter.offset + \"%\",\n        context: counter.context\n      });\n    });\n  };\n})(jQuery);","map":{"version":3,"sources":["C:\\Users\\Pratibha Hotwani\\Desktop\\Master\\User-Interface\\src\\components\\Home\\lib\\counterup\\counterup.min.js"],"names":["$","document","ready","fn","counterUp","options","settings","extend","time","delay","offset","beginAt","formatter","context","callback","s","each","$this","counter","data","counterUpper","nums","divisions","num","attr","text","isComma","test","replace","decimalPlaces","split","length","isTime","times","m","parseInt","pop","i","newNum","parseFloat","toFixed","hours","minutes","seconds","toString","call","unshift","f","html","shift","setTimeout","waypoint","direction","destroy","jQuery"],"mappings":"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","sourcesContent":["/*!\n * jquery.counterup.js 2.1.0\n *\n * Copyright 2013, Benjamin Intal http://gambit.ph @bfintal\n * Released under the GPL v2 License\n *\n * Amended by Jeremy Paris, Ciro Mattia Gonano and others\n *\n * Date: Feb 24, 2017\n */\n$(document).ready\n (function($)\n {$.fn.counterUp=function(options){var settings=$.extend({time:400,delay:10,offset:100,beginAt:0,formatter:false,context:\"window\",callback:function(){}},options),s;return this.each(function(){var $this=$(this),counter={time:$(this).data(\"counterup-time\")||settings.time,delay:$(this).data(\"counterup-delay\")||settings.delay,offset:$(this).data(\"counterup-offset\")||settings.offset,beginAt:$(this).data(\"counterup-beginat\")||settings.beginAt,context:$(this).data(\"counterup-context\")||settings.context};var counterUpper=function(){var nums=[];var divisions=counter.time/counter.delay;var num=$(this).attr(\"data-num\")?$(this).attr(\"data-num\"):$this.text();var isComma=/[0-9]+,[0-9]+/.test(num);num=num.replace(/,/g,\"\");var decimalPlaces=(num.split(\".\")[1]||[]).length;if(counter.beginAt>num)counter.beginAt=num;var isTime=/[0-9]+:[0-9]+:[0-9]+/.test(num);if(isTime){var times=num.split(\":\"),m=1;s=0;while(times.length>0){s+=m*parseInt(times.pop(),10);m*=60}}for(var i=divisions;i>=counter.beginAt/num*divisions;i--){var newNum=parseFloat(num/divisions*i).toFixed(decimalPlaces);if(isTime){newNum=parseInt(s/divisions*i);var hours=parseInt(newNum/3600)%24;var minutes=parseInt(newNum/60)%60;var seconds=parseInt(newNum%60,10);newNum=(hours<10?\"0\"+hours:hours)+\":\"+(minutes<10?\"0\"+minutes:minutes)+\":\"+(seconds<10?\"0\"+seconds:seconds)}if(isComma){while(/(\\d+)(\\d{3})/.test(newNum.toString())){newNum=newNum.toString().replace(/(\\d+)(\\d{3})/,\"$1\"+\",\"+\"$2\")}}if(settings.formatter){newNum=settings.formatter.call(this,newNum)}nums.unshift(newNum)}$this.data(\"counterup-nums\",nums);$this.text(counter.beginAt);var f=function(){if(!$this.data(\"counterup-nums\")){settings.callback.call(this);return}$this.html($this.data(\"counterup-nums\").shift());if($this.data(\"counterup-nums\").length){setTimeout($this.data(\"counterup-func\"),counter.delay)}else{$this.data(\"counterup-nums\",null);$this.data(\"counterup-func\",null);settings.callback.call(this)}};$this.data(\"counterup-func\",f);setTimeout($this.data(\"counterup-func\"),counter.delay)};$this.waypoint(function(direction){counterUpper();this.destroy()},{offset:counter.offset+\"%\",context:counter.context})})}})(jQuery);\n"]},"metadata":{},"sourceType":"module"}